#!/bin/sh

<<<<<<< HEAD
### For I/O bound processes

=======
>>>>>>> c8467a0c3eef54ac7704df51088e528f765d5eaa
create_input_folder() {
    mkdir -m 660 -p /dev/input
    for dev in /sys/class/input/*/dev; do
        if [ ! -f "$dev" ]; then
            echo "no evdev devices"
            break
        fi    
        IFS=: read major minor < "$dev"
        dev=${dev%/dev}
        dev=${dev#/sys/class/input/}
        mknod -m 660 "/dev/input/$dev" c "$major" "$minor"
    done
    echo "/dev/input created"
}

<<<<<<< HEAD
io_bound() {
    cat > test.sh <<\EOF
        counter=0
        while [ "$counter" -lt 100 ]
        do
          read -t 2 X < /dev/console
          sleep 3
          counter=$((counter+1))
=======
cpu_bound() {

    cat > test.sh <<\EOF
        sum=0
        while [ "$sum" -lt 1844445 ]
        do
          sum=$((sum+1))
>>>>>>> c8467a0c3eef54ac7704df51088e528f765d5eaa
        done
        echo $1
EOF
}

mount -t proc none /proc
mount -t sysfs none /sys
cat << !
    HELLO WORLD
                                             
!


exec /bin/sh +m &

create_input_folder &

<<<<<<< HEAD
io_bound
chmod +x test.sh

time test.sh 0 & > file0
time test.sh 1 & > file1
time test.sh 2 & > file2
time test.sh 3 & > file3
time test.sh 4 & > file4
time test.sh 5 & > file5
time test.sh 6 & > file6
time test.sh 7 & > file7
=======
cpu_bound
chmod +x test.sh
time test.sh 0 &
time test.sh 1 &
time test.sh 2 &
time test.sh 3 &
time test.sh 4 &
time test.sh 5 &
time test.sh 6 &
time test.sh 7 &
>>>>>>> c8467a0c3eef54ac7704df51088e528f765d5eaa


sleep 100000000