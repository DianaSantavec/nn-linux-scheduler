#!/bin/sh

### For I/O bound processes

create_input_folder() {
    mkdir -m 660 -p /dev/input
    for dev in /sys/class/input/*/dev; do
        if [ ! -f "$dev" ]; then
            echo "no evdev devices"
            break
        fi    
        IFS=: read major minor < "$dev"
        dev=${dev%/dev}
        dev=${dev#/sys/class/input/}
        mknod -m 660 "/dev/input/$dev" c "$major" "$minor"
    done
    echo "/dev/input created"
}

io_bound() {

    cat > test.sh <<\EOF
        counter=0
        while [ "$counter" -lt 100 ]
        do
          read -t 2 X < /dev/console
          sleep 3
          counter=$((counter+1))
        done
        echo $1
EOF
}

mount -t proc none /proc
mount -t sysfs none /sys
cat << !
    HELLO WORLD
                                             
!


exec /bin/sh +m &

create_input_folder &

io_bound
chmod +x test.sh

time test.sh 0 & > file0
time test.sh 1 & > file1
time test.sh 2 & > file2
time test.sh 3 & > file3
time test.sh 4 & > file4
time test.sh 5 & > file5
time test.sh 6 & > file6
time test.sh 7 & > file7


sleep 100000000





###############
#!/bin/sh

#init for testing

#test_process() {
# 
#    sum=0
#    while [ "$sum" -lt 1844445 ]
#    do
#      sum=$((sum+1))
#      echo hello from $1
#    done
#}

#mount -t proc none /proc
#mount -t sysfs none /sys
#exec /bin/sh +m 
#cat << !
#    HELLO WORLD
                                             
#!

chmod +x test
./test 0 &
prvi=$!
./test 1 &
drugi=$!
./test 2 &
treci=$!
./test 3 &
cetvrti=$!
sleep 4
ls proc > ovde
cat ovde
sleep 4
cat proc/$prvi/cmdline
cat proc/$drugi/cmdline
cat proc/$treci/cmdline
cat proc/$cetvrti/cmdline

mount -t proc none /proc
mount -t sysfs none /sys
exec /bin/sh +m 

sleep 100000


